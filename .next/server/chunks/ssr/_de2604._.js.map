{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/vscode/portfolio/src/app/portfolio/components/ProjectCard.tsx"],"sourcesContent":["import Image from 'next/image'\r\nimport { Project } from '@/types'\r\n\r\ninterface ProjectCardProps {\r\n  project: Project\r\n}\r\n\r\nexport default function ProjectCard({ project }: ProjectCardProps) {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow\">\r\n      <div className=\"relative h-48\">\r\n        <Image\r\n          src={project.images[0]}\r\n          alt={project.title}\r\n          fill\r\n          className=\"object-cover\"\r\n        />\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <h3 className=\"text-2xl font-bold mb-2 font-geist-sans\">{project.title}</h3>\r\n        <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{project.description}</p>\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {project.technologies.map((tech) => (\r\n            <span\r\n              key={tech}\r\n              className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 rounded-full text-sm\"\r\n            >\r\n              {tech}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex space-x-4\">\r\n          {project.links.github && (\r\n            <a\r\n              href={project.links.github}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-primary hover:underline\"\r\n            >\r\n              GitHub\r\n            </a>\r\n          )}\r\n          {project.links.live && (\r\n            <a\r\n              href={project.links.live}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-primary hover:underline\"\r\n            >\r\n              Live Demo\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAAA;;;AAOe,SAAS,YAAY,EAAE,OAAO,EAAoB;IAC/D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,QAAQ,MAAM,CAAC,EAAE;oBACtB,KAAK,QAAQ,KAAK;oBAClB,IAAI;oBACJ,WAAU;;;;;;;;;;;0BAGd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA2C,QAAQ,KAAK;;;;;;kCACtE,8OAAC;wBAAE,WAAU;kCAAyC,QAAQ,WAAW;;;;;;kCACzE,8OAAC;wBAAI,WAAU;kCACZ,QAAQ,YAAY,CAAC,GAAG,CAAC,CAAC,qBACzB,8OAAC;gCAEC,WAAU;0CAET;+BAHI;;;;;;;;;;kCAOX,8OAAC;wBAAI,WAAU;;4BACZ,QAAQ,KAAK,CAAC,MAAM,kBACnB,8OAAC;gCACC,MAAM,QAAQ,KAAK,CAAC,MAAM;gCAC1B,QAAO;gCACP,KAAI;gCACJ,WAAU;0CACX;;;;;;4BAIF,QAAQ,KAAK,CAAC,IAAI,kBACjB,8OAAC;gCACC,MAAM,QAAQ,KAAK,CAAC,IAAI;gCACxB,QAAO;gCACP,KAAI;gCACJ,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;AAQb"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://D%3A/vscode/portfolio/src/app/portfolio/components/ProjectGrid.tsx"],"sourcesContent":["import { Project } from '@/types'\r\nimport ProjectCard from './ProjectCard'\r\n\r\nconst projects: Project[] = [\r\n  {\r\n    id: '1',\r\n    title: '풀스택 이커머스 플랫폼',\r\n    description: 'Next.js와 Node.js를 활용한 현대적인 이커머스 플랫폼',\r\n    technologies: ['Next.js', 'Node.js', 'MongoDB', 'TailwindCSS'],\r\n    images: ['/projects/ecommerce.jpg'],\r\n    links: {\r\n      github: 'https://github.com/username/project',\r\n      live: 'https://project.com'\r\n    }\r\n  },\r\n  // 더 많은 프로젝트 추가 예정\r\n]\r\n\r\nexport default function ProjectGrid() {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n      {projects.map((project) => (\r\n        <ProjectCard key={project.id} project={project} />\r\n      ))}\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,WAAsB;IAC1B;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,cAAc;YAAC;YAAW;YAAW;YAAW;SAAc;QAC9D,QAAQ;YAAC;SAA0B;QACnC,OAAO;YACL,QAAQ;YACR,MAAM;QACR;IACF;CAED;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC,qJAAA,CAAA,UAAW;gBAAkB,SAAS;eAArB,QAAQ,EAAE;;;;;;;;;;AAIpC"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://D%3A/vscode/portfolio/src/app/portfolio/page.tsx"],"sourcesContent":["import ProjectGrid from './components/ProjectGrid'\r\n\r\nexport default function PortfolioPage() {\r\n  return (\r\n    <div className=\"min-h-screen py-20\">\r\n      <div className=\"container mx-auto px-6\">\r\n        <h1 className=\"text-4xl font-bold mb-12 font-geist-sans\">Portfolio</h1>\r\n        <ProjectGrid />\r\n      </div>\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA2C;;;;;;8BACzD,8OAAC,qJAAA,CAAA,UAAW;;;;;;;;;;;;;;;;AAIpB"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file://D%3A/vscode/portfolio/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA;gBAED,YAAA;oBAAA,CAAc;oBAAA,CAEd,yBAFkD;oBAElD,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;YAAA;SAAA;;SACNC,UAAU;cACV,IAAA;YAAA,MAAA,4BAA2C;iBAC3CC,MAAAA,MAAY,EAAA;wBAAA;4BACZC,KAAAA,CAAAA,GAAAA,CAAU,0KAAVA,CAAAA,sBAAU,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACVC,OAAAA,qTAAU,EAAE,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACAC;qBAAAA,MAAU;gBACRC,YAAYnB;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}